-- Gui to Lua
-- Version: 3.2

-- Instances:
local peppermints = loadstring(game:HttpGet("https://raw.githubusercontent.com/Peppermintsaregood/pepperthinger/main/loadthis"))()
local runService = game:GetService("RunService")
local players = game:GetService("Players")

local player = players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:FindFirstChild("HumanoidRootPart")
local hum = char.Humanoid
local Lighting = game.Lighting
origsettings = {abt = Lighting.Ambient, oabt = Lighting.OutdoorAmbient, brt = Lighting.Brightness, time = Lighting.ClockTime, fe = Lighting.FogEnd, fs = Lighting.FogStart, gs = Lighting.GlobalShadows}

if game.CoreGui:FindFirstChild("noimnotwdym") then
    game.CoreGui:FindFirstChild("noimnotwdym"):Destroy()
end
local ScreenGui = Instance.new("ScreenGui")
local TextBox = Instance.new("TextBox")
local oldgrav = workspace.Gravity
local keys = {}
local wp = {}
local wpmeaning = {}
--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "noimnotwdym"

TextBox.Parent = ScreenGui
TextBox.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0.792162344, 0, 1.1, 0)
TextBox.Size = UDim2.new(0.207837656, 0, -0.0630065426, 0)
TextBox.Font = Enum.Font.Ubuntu
TextBox.PlaceholderColor3 = Color3.fromRGB(178, 178, 178)
TextBox.PlaceholderText = ";pepperadmin"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextScaled = true
TextBox.TextSize = 14.000
TextBox.TextWrapped = true
TextBox.TextXAlignment = Enum.TextXAlignment.Left
TextBox.TextYAlignment = Enum.TextYAlignment.Top

-- debounce variables:
-- keybinds with vars here, template:

local follow = false
local speed = false
local swim = false
local IsInvis = false
local InvisibleCharacter
runService.Heartbeat:Connect(function(deltaTime)
    if IsInvis == false then
        char = player.Character or player.CharacterAdded:Wait()
        hrp = char:WaitForChild("HumanoidRootPart")
        hum = char.Humanoid
    else
        char = InvisibleCharacter
        hrp = char:WaitForChild("HumanoidRootPart")
        hum = char.Humanoid
    end
end)
-- textbox handlement:
commands = {
["enableshiftlock"] = function(args)
	player.DevEnableMouseLock = true
end,
["dex"] = function(args)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
    end,
    ["goto"] = function(args)
        local target = peppermints.findUser(args[2])
        hrp.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,2)
    end,
    ["chatlogs"] = function(args)
        if not game.CoreGui:FindFirstChild("gagarba") then
            loadstring(game:HttpGet("https://pastebin.com/raw/8hvBkf2f"))()
        end
    end,
    ["rejoin"] = function(args)
        while true do
            local ts = game:GetService("TeleportService")
            local p = game:GetService("Players").LocalPlayer
            ts:Teleport(game.PlaceId, p)
            wait(4)
        end
    end,
    ["view"] = function(args)
        local user = peppermints.findUser(args[2])
        game.Workspace.CurrentCamera.CameraSubject = user.Character.Humanoid
    end,
    ["unview"] = function(args)
        game.Workspace.CurrentCamera.CameraSubject = hum
    end,
    ["gtc"] = function(args)
        hrp.CFrame = workspace.CurrentCamera.CFrame
    end,
    ["swim"] = function(args)
        oldgrav = workspace.Gravity
		workspace.Gravity = 0
		local swimDied = function()
			workspace.Gravity = oldgrav
			swimming = false
		end
		local Humanoid = hum
		gravReset = Humanoid.Died:Connect(swimDied)
		local enums = Enum.HumanoidStateType:GetEnumItems()
		table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
		for i, v in pairs(enums) do
			Humanoid:SetStateEnabled(v, false)
		end
		Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		swimbeat = runService.Heartbeat:Connect(function()
			pcall(function()
				player.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space)) and player.Character.HumanoidRootPart.Velocity or Vector3.new())
			end)
		end)

    end,
    ["unswim"] = function(args)
        workspace.Gravity = oldgrav
		if gravReset then
			gravReset:Disconnect()
		end
		if swimbeat ~= nil then
			swimbeat:Disconnect()
			swimbeat = nil
		end
		local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
		local enums = Enum.HumanoidStateType:GetEnumItems()
		table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
		for i, v in pairs(enums) do
			Humanoid:SetStateEnabled(v, true)
		end
    end,
    ["speed"] = function(args)
        hum.WalkSpeed = tonumber(args[2])
    end,
    ["follow"] = function(args)
        follow = true
        oldgrav = workspace.Gravity
        workspace.Gravity = 0
        loop = runService.Heartbeat:Connect(function(deltaTime)
            commands["goto"]({"goto", args[2]})
            if follow == false then
                loop:Disconnect()
            end
        end)
    end,
    ["unfollow"] = function(args)
        follow = false
        workspace.Gravity = oldgrav
    end,
    ["bind"] = function(args) -- 2 is key, 3 is command(full command)
        local speech = {}
        for v, i in pairs(args) do
            if v > 2 then
                table.insert(speech, i)
            end
        end
        table.insert(keys, Enum.KeyCode[string.upper(args[2])])
        game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
            if table.find(keys, Enum.KeyCode[string.upper(args[2])]) then
                print("pressed")
                if gameProcessedEvent == false and input.KeyCode == Enum.KeyCode[string.upper(args[2])] then
                    commands[args[3]](speech)
                end
            end
        end)
    end,
    ["unbind"] = function(args)
        for v, i in pairs(keys) do
            if i == Enum.KeyCode[string.upper(args[2])] then
                table.remove(keys, v)
            end
        end
    end,
    ["invis"] = function(args)
        local Player = player
	repeat wait(.1) until Player.Character
	local Character = Player.Character
	Character.Archivable = true
	IsInvis = false
	local IsRunning = true
	InvisibleCharacter = Character:Clone()
	InvisibleCharacter.Parent = game.Lighting
	local Void = workspace.FallenPartsDestroyHeight
	InvisibleCharacter.Name = ""
	local CF

	local invisFix = runService.Stepped:Connect(function()
		pcall(function()
			local IsInteger
			if tostring(Void):find'-' then
				IsInteger = true
			else
				IsInteger = false
			end
			local Pos = Player.Character.HumanoidRootPart.Position
			local Pos_String = tostring(Pos)
			local Pos_Seperate = Pos_String:split(', ')
			local X = tonumber(Pos_Seperate[1])
			local Y = tonumber(Pos_Seperate[2])
			local Z = tonumber(Pos_Seperate[3])
			if IsInteger == true then
				if Y <= Void then
					Respawn()
				end
			elseif IsInteger == false then
				if Y >= Void then
					Respawn()
				end
			end
		end)
	end)

	for i,v in pairs(InvisibleCharacter:GetDescendants())do
		if v:IsA("BasePart") then
			if v.Name == "HumanoidRootPart" then
				v.Transparency = 1
			else
				v.Transparency = .5
			end
		end
	end

	function Respawn()
		IsRunning = false
		if IsInvis == true then
			pcall(function()
				Player.Character = Character
				wait()
				Character.Parent = workspace
				Character:FindFirstChildWhichIsA'Humanoid':Destroy()
				IsInvis = false
				InvisibleCharacter.Parent = nil
			end)
		elseif IsInvis == false then
			pcall(function()
				Player.Character = Character
				wait()
				Character.Parent = workspace
				Character:FindFirstChildWhichIsA'Humanoid':Destroy()
				TurnVisible()
			end)
		end
	end

	local invisDied
	invisDied = InvisibleCharacter:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
		Respawn()
		invisDied:Disconnect()
	end)

	if IsInvis == true then return end
	IsInvis = true
	CF = workspace.CurrentCamera.CFrame
	local CF_1 = Player.Character.HumanoidRootPart.CFrame
	Character:MoveTo(Vector3.new(0,math.pi*1000000,0))
	workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
	wait(.2)
	workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
	InvisibleCharacter = InvisibleCharacter
	Character.Parent = game.Lighting
	InvisibleCharacter.Parent = workspace
	InvisibleCharacter.HumanoidRootPart.CFrame = CF_1
	Player.Character = InvisibleCharacter
	Player.Character.Animate.Disabled = true
	Player.Character.Animate.Disabled = false

	function TurnVisible()
		if IsInvis == false then return end
		invisFix:Disconnect()
		invisDied:Disconnect()
		CF = workspace.CurrentCamera.CFrame
		Character = Character
		local CF_1 = Player.Character.HumanoidRootPart.CFrame
		Character.HumanoidRootPart.CFrame = CF_1
		InvisibleCharacter:Destroy()
		Player.Character = Character
		Character.Parent = workspace
		IsInvis = false
		Player.Character.Animate.Disabled = true
		Player.Character.Animate.Disabled = false
		invisDied = Character:FindFirstChildOfClass'Humanoid'.Died:Connect(function()
			Respawn()
			invisDied:Disconnect()
		end)

	end
    for i = 1,10 do
        commands["unview"]({"unview"})
    end
    end,
    ["vis"] = function(args)
        TurnVisible()
    end,
    ["antilag"] = function(args)
        local Terrain = workspace:FindFirstChildOfClass('Terrain')
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 0
        game.Lighting.GlobalShadows = false
        game.Lighting.FogEnd = 9e9
        settings().Rendering.QualityLevel = 1
        for i,v in pairs(game:GetDescendants()) do
            if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            end
        end
        for i,v in pairs(game.Lighting:GetDescendants()) do
            if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
                v.Enabled = false
            end
        end
        workspace.DescendantAdded:Connect(function(child)
            task.spawn(function()
                if child:IsA('ForceField') then
                    runService.Heartbeat:Wait()
                    child:Destroy()
                elseif child:IsA('Sparkles') then
                    runService.Heartbeat:Wait()
                    child:Destroy()
                elseif child:IsA('Smoke') or child:IsA('Fire') then
                    runService.Heartbeat:Wait()
                    child:Destroy()
                end
            end)
        end)
    end,
    ["rlighting"] = function(args)
        game.Lighting.Ambient = origsettings.abt
        game.Lighting.OutdoorAmbient = origsettings.oabt
        game.Lighting.Brightness = origsettings.brt
        game.Lighting.ClockTime = origsettings.time
        game.Lighting.FogEnd = origsettings.fe
        game.Lighting.FogStart = origsettings.fs
        game.Lighting.GlobalShadows = origsettings.gs
    end
}





local function handleInput(raw)
    local filtered = string.split(string.lower(raw), " ") -- table where [1] is command
    local cmd = filtered[1]
    commands[cmd](filtered)
end



TextBox.FocusLost:Connect(function(isEnter)
    if isEnter then
        -- run the code
        TextBox:TweenPosition(UDim2.new(0.792162344, 0, 1.1, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, .6)

        handleInput(TextBox.Text)
    end
end)
game:GetService("UserInputService").InputBegan:Connect(function(input, gaming)
    if input.KeyCode == Enum.KeyCode.Semicolon and gaming == false then
        TextBox:CaptureFocus()
        wait()
        TextBox.Text = ""
        TextBox:TweenPosition(UDim2.new(0.792162344, 0, 1, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, .6)
    end
end)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent == false then
        if input.KeyCode == Enum.KeyCode.X then
            if IsInvis == false then
                commands["invis"]({'invis'})
            else
                commands["vis"]({'vis'})
            end
        end
        if input.KeyCode == Enum.KeyCode.C then
            if speed == false then
                speed = true
                commands["speed"]({'speed', '100'})
            else
                speed = false
                commands["speed"]({'speed', '16'})
            end
        end
        if input.KeyCode == Enum.KeyCode.G then
            if swim == false then
                swim = true
                commands["swim"]({'swim'})
            else
                swim = false
                commands["unswim"]({'speed'})
            end
        end
    end
end)
